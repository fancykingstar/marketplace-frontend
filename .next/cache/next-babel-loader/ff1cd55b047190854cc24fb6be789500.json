{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { api, authApi } from '../../util/api';\n\nvar Auth = /*#__PURE__*/function () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, [{\n    key: \"signInWithEmailAndPassword\",\n    value: function () {\n      var _signInWithEmailAndPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authApi({\n                  method: \"post\",\n                  url: \"/users/\",\n                  data: {\n                    email: email,\n                    password: password\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function signInWithEmailAndPassword(_x, _x2) {\n        return _signInWithEmailAndPassword.apply(this, arguments);\n      }\n\n      return signInWithEmailAndPassword;\n    }()\n  }]);\n\n  return Auth;\n}();","map":{"version":3,"sources":["D:/Work/cozin/project/novine-react/service/auth/index.js"],"names":["api","authApi","Auth","email","password","method","url","data"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,gBAA7B;;IAEMC,I;AACL,kBAAc;AAAA;AACb;;;;;kHAEgCC,K,EAAOC,Q;;;;;AACvCH,gBAAAA,OAAO,CAAC;AACPI,kBAAAA,MAAM,EAAE,MADD;AAEPC,kBAAAA,GAAG,EAAE,SAFE;AAGPC,kBAAAA,IAAI,EAAE;AACLJ,oBAAAA,KAAK,EAAEA,KADF;AAELC,oBAAAA,QAAQ,EAAEA;AAFL;AAHC,iBAAD,CAAP","sourcesContent":["import { api, authApi } from '../../util/api';\r\n\r\nclass Auth {\r\n\tconstructor() {\r\n\t}\r\n\r\n\tasync signInWithEmailAndPassword(email, password) {\r\n\t\tauthApi({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: \"/users/\",\r\n\t\t\tdata: {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}